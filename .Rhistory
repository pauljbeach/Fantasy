aes(fill = isWinner, color = isWinner))+
stat_pointinterval(aes(alpha = .8),point_interval = mean_qi)+
geom_rangeframe(inherit.aes = F, aes(y = name, x = points, group = name))+
scale_color_metro(guide = "none")+
scale_fill_metro(guide = "none")+
guides(alpha = "none")+
theme_tufte(base_family = "Gill Sans")+
theme(panel.grid.major.x = element_line(color = "grey"),
axis.text.y = element_text(hjust = 1, face = "bold"),
aspect.ratio = 1.2)
ph <- nflreadr::load_player_stats(2000:2022) %>% as_tibble() %>%
filter(season_type == "REG")
sched_raw <- nflreadr::load_schedules()
sched <- sched_raw %>%
select(season, week,team = home_team,opp = away_team, score = home_score) %>%
bind_rows( sched_raw %>% select(season, week,
team = away_team,
opp = home_team, score = away_score)) %>%
mutate(across(c(team, opp),~case_when(.== "STL"~ "LA",
. == "SD" ~ "LAC",
. == "OAK" ~"LV",
T ~ .)))
phk <- nflreadr::load_player_stats(2000:2022,stat_type = "kicking") %>% as_tibble()%>%
mutate(fantasy_points_ppr = pat_made - pat_missed - fg_missed + 3*fg_made_30_39+ 4*fg_made_40_49+5*fg_made_50_59+5*fg_made_60_ ,
position = "K") %>%
filter(season_type == "REG") %>%
select(season, week,recent_team  = team,position, player_display_name =player_name,fantasy_points_ppr, pat_made,fg_made)
# Def -----
def <- ph %>% group_by(week,season,team = recent_team) %>%
summarise(across(c(
rushing_yards,
sacks,
passing_yards,
rushing_tds,
passing_tds,
passing_2pt_conversions,
rushing_2pt_conversions,
rushing_fumbles_lost,
interceptions),sum)) %>%
left_join(sched, by = c("team", "season", "week")) %>%
left_join(phk %>% group_by(season, week, team) %>%
summarise(fg_made = sum(fg_made), pat_made = sum(pat_made)),
by = c("team", "season", "week")) %>%
mutate(total_yards = rushing_yards + passing_yards,
pbin = as.numeric(as.character(cut(score,
breaks = c(0,1,7,14,28,35,46, Inf),
labels = c(5,4,3,1,-1,-3,-5)))),
tybin = as.numeric(as.character(cut(total_yards,
breaks = c(0,100,200,300,350,400,450,500,550,Inf),
labels = c(5,3,2,1,-1,-3,-5,-6,-7)))),
across(c(pat_made,fg_made), ~replace_na(.,0)),
implied_def_points =score - (6*rushing_tds +6*passing_tds + 3*fg_made + pat_made)
)
phk <- nflreadr::load_player_stats(2000:2022,stat_type = "kicking") %>% as_tibble()%>%
mutate(fantasy_points_ppr = pat_made - pat_missed - fg_missed + 3*fg_made_30_39+ 4*fg_made_40_49+5*fg_made_50_59+5*fg_made_60_ ,
position = "K") %>%
filter(season_type == "REG") %>%
select(season, week,recent_team  = team,position, player_display_name =player_name,fantasy_points_ppr, pat_made,fg_made)
phk
ph <- nflreadr::load_player_stats(2000:2022) %>% as_tibble() %>%
filter(season_type == "REG")
ph
distinct(ph,position)
# Def -----
def <- ph %>% group_by(week,season,team = recent_team) %>%
summarise(across(c(
rushing_yards,
sacks,
passing_yards,
rushing_tds,
passing_tds,
passing_2pt_conversions,
rushing_2pt_conversions,
rushing_fumbles_lost,
interceptions),sum)) %>%
left_join(sched, by = c("team", "season", "week")) %>%
left_join(phk %>% group_by(season, week, team) %>%
summarise(fg_made = sum(fg_made), pat_made = sum(pat_made)),
by = c("team", "season", "week")) %>%
mutate(total_yards = rushing_yards + passing_yards,
pbin = as.numeric(as.character(cut(score,
breaks = c(0,1,7,14,28,35,46, Inf),
labels = c(5,4,3,1,-1,-3,-5)))),
tybin = as.numeric(as.character(cut(total_yards,
breaks = c(0,100,200,300,350,400,450,500,550,Inf),
labels = c(5,3,2,1,-1,-3,-5,-6,-7)))),
across(c(pat_made,fg_made), ~replace_na(.,0)),
implied_def_points =score - (6*rushing_tds +6*passing_tds + 3*fg_made + pat_made)
)
sched
phk
# Def -----
def <- ph %>% group_by(week,season,team = recent_team) %>%
summarise(across(c(
rushing_yards,
sacks,
passing_yards,
rushing_tds,
passing_tds,
passing_2pt_conversions,
rushing_2pt_conversions,
rushing_fumbles_lost,
interceptions),sum)) %>%
left_join(sched, by = c("team", "season", "week")) %>%
left_join(phk %>% group_by(season, week, team) %>%
summarise(fg_made = sum(fg_made), pat_made = sum(pat_made)),
by = c("team", "season", "week"))
# Def -----
def <- ph %>% group_by(week,season,team = recent_team) %>%
summarise(across(c(
rushing_yards,
sacks,
passing_yards,
rushing_tds,
passing_tds,
passing_2pt_conversions,
rushing_2pt_conversions,
rushing_fumbles_lost,
interceptions),sum)) %>%
left_join(sched, by = c("team", "season", "week")) %>%
left_join(phk %>% group_by(season, week, team = recent_team) %>%
summarise(fg_made = sum(fg_made), pat_made = sum(pat_made)),
by = c("team", "season", "week"))
def
# Def -----
def <- ph %>% group_by(week,season,team = recent_team) %>%
summarise(across(c(
rushing_yards,
sacks,
passing_yards,
rushing_tds,
passing_tds,
passing_2pt_conversions,
rushing_2pt_conversions,
rushing_fumbles_lost,
interceptions),sum)) %>%
left_join(sched, by = c("team", "season", "week")) %>%
left_join(phk %>% group_by(season, week, team = recent_team) %>%
summarise(fg_made = sum(fg_made), pat_made = sum(pat_made)),
by = c("team", "season", "week")) %>%
mutate(total_yards = rushing_yards + passing_yards,
pbin = as.numeric(as.character(cut(score,
breaks = c(0,1,7,14,28,35,46, Inf),
labels = c(5,4,3,1,-1,-3,-5)))),
tybin = as.numeric(as.character(cut(total_yards,
breaks = c(0,100,200,300,350,400,450,500,550,Inf),
labels = c(5,3,2,1,-1,-3,-5,-6,-7)))),
across(c(pat_made,fg_made), ~replace_na(.,0)),
implied_def_points =score - (6*rushing_tds +6*passing_tds + 3*fg_made + pat_made)
)
def2 <- def %>%
left_join(def %>% select(season, week, "team" = opp, idp = implied_def_points),
by = c("season", "week", "team")) %>%
mutate(fantasy_points_ppr = idp + pbin + tybin + 2*interceptions + 2*rushing_fumbles_lost+sacks,
position = "DST") %>%
select(season, week,
player_display_name = opp, recent_team = opp,
position,
fantasy_points_ppr,
total_yards,score, opp = team)
# top players ----
top_players <- ph %>%
filter(position %in% c("QB", "RB", "WR", "TE", "DST"),
season < 2022) %>%
bind_rows(phk)%>%
bind_rows(def2) %>%
group_by(player_display_name,season, position, recent_team) %>%
summarise(points = sum(fantasy_points_ppr, na.rm = T),
sd = sd(fantasy_points_ppr, na.rm = T),
games = n()) %>%
group_by(position) %>%
slice_max(points, n = 3) %>%
select(player_display_name, points, season)
top_s_players <- ph %>%
filter(position %in% c("QB", "RB", "WR", "TE", "DST"),
season < 2022) %>%
bind_rows(phk) %>%
bind_rows(def2) %>%
group_by(player_display_name,season, position, recent_team) %>%
summarise(points = sum(fantasy_points_ppr, na.rm = T),
sd = sd(fantasy_points_ppr, na.rm = T),
games = n()) %>%
group_by(position, season) %>%
slice_max(points, n = 1) %>%
select(player_display_name, points, season) %>%
group_by(position) %>%
slice_max(points, n = 3)
# create df graph ----
phs <- ph %>%
filter(position %in% c("QB", "RB", "WR", "TE")) %>%
bind_rows(phk) %>%
bind_rows(def2) %>%
filter(season < 2022) %>%
group_by(player_display_name,season,recent_team, position) %>%
summarise(points = sum(fantasy_points_ppr, na.rm = T),
sd = sd(fantasy_points_ppr, na.rm = T),
games = n()) %>%
split(~position+season) %>%
map2_df(.,rep(c(14,14,14,35,14,35),22),
~ ungroup(.x) %>%
slice_max(points, n = .y) %>%
arrange(desc(points))) %>%
mutate(position = fct_reorder(position,points,mean,.desc = T))
# raincloud ----
phs %>%
ggplot(aes(x = points, y = position, fill = position, color = position))+
stat_halfeye(position = "dodge",height = 1)+
stat_dots(side = "left", height = .8)+
theme_tufte(base_family = "Gill Sans", base_size = 13)+
theme(axis.text.y = element_text(face = "bold"))+
geom_rangeframe(inherit.aes = F, aes(x = points, y = position))+
guides(fill = "none", color = 'none', alpha = "none")+
labs(y = NULL,
x = "TOTAL POINTS",
title = "SEASON TOTAL DISTRIBUTION OF LIKELY FANTASY STARTERS",
subtitle  = "2000 - 2021 SEASONS")+
stat_pointinterval(color = "black", aes(alpha = .8))+
geom_text_repel(data = top_players,inherit.aes = F,
size = 2,
family = "Gill Sans",
segment.curvature = .4,
segment.alpha = .3,
nudge_y = .5,
nudge_x = 20,
aes(label = paste0(player_display_name, "\n", season, " (", points, ")"),
x = points, y = position))+
scale_color_metro(aesthetics = c("color", "fill"))
def2
def2$fantasy_points_ppr %>% mean()
def2$fantasy_points_ppr %>% mean(na.rm = T)
def2$fantasy_points_ppr %>% sd(na.rm = T)
ggdist()
shelf(ggdist)
ggdist
ggdist::
ggdist::
shelf(ExtDist)
bestDist(def2$fantasy_points_ppr)
def2$fantasy_points_ppr
bestDist(def2$fantasy_points_ppr %>% drop_na())
def2$fantasy_points_ppr %>% drop_na()
def2 %>% drop_na(fantasy_points_ppr) %>% pull(fantasy_points_ppr)
def2 %>% drop_na(fantasy_points_ppr) %>% pull(fantasy_points_ppr) %>%
view()
defp <- def2 %>% drop_na(fantasy_points_ppr) %>% pull(fantasy_points_ppr) %>%
view()
defp <- def2 %>% drop_na(fantasy_points_ppr) %>% pull(fantasy_points_ppr)
bestDist(defp)
bestDist(defp,criterion = "logLik")
bd <- bestDist(defp,criterion = "logLik")
bd
attr(bd)
beta(-3.4e1,4.5e7)
beta(-3.4e1,4.5e7)
beta(4.02e1,4.44e7)
beta(4.02e1,4.44e7)
beta(4.02e1,4.44e7)
fitdist(defp)
fitdist(defp,distr = "beta")
install.packages("tidyverse")
library(tidyverse)
install.packages("curl")
install.packages("ffverse")
install.packages("ffscrapr")
instll.packages("fflr")
install.packages("fflr")
remotes::install_github("kiernann/fflr")
install.packages("remotes")
remotes::install_github("k5cents/fflr")
remotes::install_github("k5cents/fflr")
install.packages("librarian")
library(librarian)
shelf("k5cents/fflr")
shelf("k5cents/fflr")
Sys.setenv(GITHUB_PAT = "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")
shelf("k5cents/fflr")
fflr
fflr::ffl_id(762538)
scores_raw <- fflr::tidy_scores(leagueHistory = T) %>% bind_rows()
scores_raw
scores_raw %$% range(seasonId)
%$%
file.edit("~/.Rprofile")
scores_raw %$% range(seasonId)
scores_raw %$% range(seasonId)
scores_raw
fflr::transaction_counter()
if (requireNamespace("librarian", quietly = TRUE)) {
library(librarian)
}
shelf(fflr)
fflr::ffl_id(762538)
fflr::transaction_counter()
fflr::transaction_counter(leagueHistory = T)
trans <- fflr::transaction_counter(leagueHistory = T)
trans
trans <- fflr::transaction_counter(leagueHistory = T)
trans <- fflr::transaction_counter(leagueHistory = T) %>%
setNames(paste("y", 2016:2023))
trans <- fflr::transaction_counter(leagueHistory = T) %>%
setNames(paste0("y", 2016:2023))
trans$y2023
trans$y2023 %>% colnames()
trans$y2023
trans$y2023 %>% view
transaction_counter
fflr::transaction_counter()
fflr::acquisition_settings()
fflr::best_roster()
fflr::ffl_seasons()
fflr::tidy_scores()
fflr::tidy_scores(leagueHistory = T)
scores <- fflr::tidy_scores(leagueHistory = T)
scores
scores
scores %>%
bind_rows()
scores %>%
bind_rows() %>%
summarise(across(totalPoints,sum),.by = abbrev, seasonId)
scores %>%
bind_rows()
summarise(across(expectedWins,sum),.by = abbrev, seasonId)
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId))
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId))
trans
trans %>% bind_rows()
trans %>% bind_rows() %>% colnames()
summarise(across(aquisisitions,sum),.by = c(abbrev, seasonId))
trans %>% bind_rows() %>%
summarise(across(aquisisitions,sum),.by = c(abbrev, seasonId))
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
)
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(expectedWins,acquisitions))+
geom_point()
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth()
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth(method = 'lm')
scores %>%
bind_rows() %>%
summarise(across(expectedWins,sum),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~mean(.)*12),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~mean(.)*17),.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
scores %>%
bind_rows()
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~mean(.)*17),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId))
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId)) %>%
) %>%
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId)) %>%
) %>%
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(acquisitions,expectedWins))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
)
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(expectedWins, isWinner))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(expectedWins, isWinner))+
geom_point()+
geom_smooth(method = 'lm')
scores %>%
bind_rows() %>%
summarise(across(expectedWins,~sum(.)),
across(isWinner,~sum(.)),
.by = c(abbrev, seasonId)) %>%
left_join(
trans %>% bind_rows() %>%
summarise(across(acquisitions,sum),.by = c(abbrev, seasonId))
) %>%
ggplot(aes(expectedWins, isWinner))+
geom_point()+
geom_smooth(method = 'lm')+
geom_label(aes(label = abbrev))
shelf(ffscrapr)
ffscrapr::espn_connect()
fflr
fflr::ffl_id
shelf(ffscrapr,ffanalytics)
shelf(ffscrapr,FantasyFootballAnalytics/ffanalytics)
shelf(ffscrapr,FantasyFootballAnalytics/ffanalytics)
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
shelf(ffscrapr,FantasyFootballAnalytics/ffanalytics)
Sys.getenv("GITHUB_PAT")
shelf(usethis)
git_sitrep()
